{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Login\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Login\\Login.vue","mtime":1688627473127},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1688627669854},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["\r\nimport { Form, Tabs } from \"ant-design-vue\";\r\nimport LoginContext from \"./LoginContext\";\r\n\r\nconst Login = {\r\n  props: {\r\n    defaultActiveKey: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    onTabChange: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    onSubmit: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      type: this.$props.defaultActiveKey,\r\n      tabs: [],\r\n      active: {}\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const { type, form, onSubmit } = this;\r\n      const activeFileds = this.active[type];\r\n      form.validateFields(activeFileds, { force: true }, (err, values) => {\r\n        onSubmit(err, values);\r\n      });\r\n    },\r\n    onSwitch(type) {\r\n      this.type = type;\r\n      const { onTabChange } = this;\r\n      onTabChange(type);\r\n    },\r\n    getContext() {\r\n      const { tabs } = this.$data;\r\n      const { form } = this.$props;\r\n      return {\r\n        tabUtil: {\r\n          addTab: id => {\r\n            this.tabs = [...tabs, id];\r\n          },\r\n          removeTab: id => {\r\n            this.tabs = tabs.filter(currentId => currentId !== id);\r\n          }\r\n        },\r\n        form: {\r\n          ...form\r\n        },\r\n        updateActive: activeItem => {\r\n          const { type, active } = this;\r\n          if (active[type]) {\r\n            active[type].push(activeItem);\r\n          } else {\r\n            active[type] = [activeItem];\r\n          }\r\n        }\r\n      };\r\n    }\r\n  },\r\n  render() {\r\n    const { tabs, type } = this.$data;\r\n    const children = this.$slots.default;\r\n    const TabChildren = [];\r\n    const otherChildren = [];\r\n\r\n    children.forEach(item => {\r\n      // console.log(\"item: \", item);\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      if (item.componentOptions && item.componentOptions.tag === \"Tab\") {\r\n        TabChildren.push(item);\r\n      } else {\r\n        otherChildren.push(item);\r\n      }\r\n    });\r\n    return (\r\n      <LoginContext.Provider value={this.getContext()}>\r\n        <div class=\"login\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            {tabs.length > 0 ? (\r\n              <div>\r\n                <Tabs\r\n                  animated={false}\r\n                  class={\"tabs\"}\r\n                  activeKey={type}\r\n                  onChange={this.onSwitch}\r\n                >\r\n                  {TabChildren}\r\n                </Tabs>\r\n                {otherChildren}\r\n              </div>\r\n            ) : (\r\n              children\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </LoginContext.Provider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form.create()(Login);\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappingsfile":"Login.vue","sourceRoot":"src/components/Login","sourcesContent":["<script>\r\nimport { Form, Tabs } from \"ant-design-vue\";\r\nimport LoginContext from \"./LoginContext\";\r\n\r\nconst Login = {\r\n  props: {\r\n    defaultActiveKey: {\r\n      type: String,\r\n      default: \"\"\r\n    },\r\n    onTabChange: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    onSubmit: {\r\n      type: Function,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      type: this.$props.defaultActiveKey,\r\n      tabs: [],\r\n      active: {}\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const { type, form, onSubmit } = this;\r\n      const activeFileds = this.active[type];\r\n      form.validateFields(activeFileds, { force: true }, (err, values) => {\r\n        onSubmit(err, values);\r\n      });\r\n    },\r\n    onSwitch(type) {\r\n      this.type = type;\r\n      const { onTabChange } = this;\r\n      onTabChange(type);\r\n    },\r\n    getContext() {\r\n      const { tabs } = this.$data;\r\n      const { form } = this.$props;\r\n      return {\r\n        tabUtil: {\r\n          addTab: id => {\r\n            this.tabs = [...tabs, id];\r\n          },\r\n          removeTab: id => {\r\n            this.tabs = tabs.filter(currentId => currentId !== id);\r\n          }\r\n        },\r\n        form: {\r\n          ...form\r\n        },\r\n        updateActive: activeItem => {\r\n          const { type, active } = this;\r\n          if (active[type]) {\r\n            active[type].push(activeItem);\r\n          } else {\r\n            active[type] = [activeItem];\r\n          }\r\n        }\r\n      };\r\n    }\r\n  },\r\n  render() {\r\n    const { tabs, type } = this.$data;\r\n    const children = this.$slots.default;\r\n    const TabChildren = [];\r\n    const otherChildren = [];\r\n\r\n    children.forEach(item => {\r\n      // console.log(\"item: \", item);\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      if (item.componentOptions && item.componentOptions.tag === \"Tab\") {\r\n        TabChildren.push(item);\r\n      } else {\r\n        otherChildren.push(item);\r\n      }\r\n    });\r\n    return (\r\n      <LoginContext.Provider value={this.getContext()}>\r\n        <div class=\"login\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            {tabs.length > 0 ? (\r\n              <div>\r\n                <Tabs\r\n                  animated={false}\r\n                  class={\"tabs\"}\r\n                  activeKey={type}\r\n                  onChange={this.onSwitch}\r\n                >\r\n                  {TabChildren}\r\n                </Tabs>\r\n                {otherChildren}\r\n              </div>\r\n            ) : (\r\n              children\r\n            )}\r\n          </Form>\r\n        </div>\r\n      </LoginContext.Provider>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form.create()(Login);\r\n</script>\r\n"]}]}