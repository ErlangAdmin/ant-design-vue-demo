{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\layouts\\SiderMenu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\layouts\\SiderMenu.vue","mtime":1688627473132},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n/*\r\n * recommend SubMenu.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu.vue\r\n * SubMenu1.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu1.vue\r\n * */\r\nimport SubMenu from \"./SubMenu\";\r\nimport { check } from \"../utils/auth\";\r\nexport default {\r\n  props: {\r\n    theme: {\r\n      type: String,\r\n      default: \"dark\"\r\n    },\r\n    collapsed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    \"sub-menu\": SubMenu\r\n  },\r\n  watch: {\r\n    \"$route.path\": function(val) {\r\n      this.selectedKeys = this.selectedKeysMap[val];\r\n      this.openKeys = this.collapsed ? [] : this.openKeysMap[val];\r\n    },\r\n    collapsed(val) {\r\n      if (val) {\r\n        this.cacheOpenKeys = this.openKeys;\r\n        this.openKeys = [];\r\n      } else {\r\n        this.openKeys = this.cacheOpenKeys;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    this.selectedKeysMap = {};\r\n    this.openKeysMap = {};\r\n    const menuData = this.getMenuData(this.$router.options.routes);\r\n    return {\r\n      menuData,\r\n      selectedKeys: this.selectedKeysMap[this.$route.path],\r\n      openKeys: this.collapsed ? [] : this.openKeysMap[this.$route.path]\r\n    };\r\n  },\r\n  methods: {\r\n    toggleCollapsed() {\r\n      this.collapsed = !this.collapsed;\r\n    },\r\n    getMenuData(routes = [], parentKeys = [], selectedKey) {\r\n      const menuData = [];\r\n      for (let item of routes) {\r\n        if (item.meta && item.meta.authority && !check(item.meta.authority)) {\r\n          continue;\r\n        }\r\n        if (item.name && !item.hideInMenu) {\r\n          this.openKeysMap[item.path] = parentKeys;\r\n          this.selectedKeysMap[item.path] = [selectedKey || item.path];\r\n          const newItem = { ...item };\r\n          delete newItem.children;\r\n          if (item.children && !item.hideChildrenInMenu) {\r\n            newItem.children = this.getMenuData(item.children, [\r\n              ...parentKeys,\r\n              item.path\r\n            ]);\r\n          } else {\r\n            this.getMenuData(\r\n              item.children,\r\n              selectedKey ? parentKeys : [...parentKeys, item.path],\r\n              selectedKey || item.path\r\n            );\r\n          }\r\n          menuData.push(newItem);\r\n        } else if (\r\n          !item.hideInMenu &&\r\n          !item.hideChildrenInMenu &&\r\n          item.children\r\n        ) {\r\n          menuData.push(\r\n            ...this.getMenuData(item.children, [...parentKeys, item.path])\r\n          );\r\n        }\r\n      }\r\n\r\n      return menuData;\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["SiderMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SiderMenu.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\r\n  <div style=\"width: 256px\">\r\n    <a-menu\r\n      :selectedKeys=\"selectedKeys\"\r\n      :openKeys.sync=\"openKeys\"\r\n      mode=\"inline\"\r\n      :theme=\"theme\"\r\n    >\r\n      <template v-for=\"item in menuData\">\r\n        <a-menu-item\r\n          v-if=\"!item.children\"\r\n          :key=\"item.path\"\r\n          @click=\"() => $router.push({ path: item.path, query: $route.query })\"\r\n        >\r\n          <a-icon v-if=\"item.meta.icon\" :type=\"item.meta.icon\" />\r\n          <span>{{ item.meta.title }}</span>\r\n        </a-menu-item>\r\n        <sub-menu v-else :menu-info=\"item\" :key=\"item.path\" />\r\n      </template>\r\n    </a-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/*\r\n * recommend SubMenu.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu.vue\r\n * SubMenu1.vue https://github.com/vueComponent/ant-design-vue/blob/master/components/menu/demo/SubMenu1.vue\r\n * */\r\nimport SubMenu from \"./SubMenu\";\r\nimport { check } from \"../utils/auth\";\r\nexport default {\r\n  props: {\r\n    theme: {\r\n      type: String,\r\n      default: \"dark\"\r\n    },\r\n    collapsed: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    \"sub-menu\": SubMenu\r\n  },\r\n  watch: {\r\n    \"$route.path\": function(val) {\r\n      this.selectedKeys = this.selectedKeysMap[val];\r\n      this.openKeys = this.collapsed ? [] : this.openKeysMap[val];\r\n    },\r\n    collapsed(val) {\r\n      if (val) {\r\n        this.cacheOpenKeys = this.openKeys;\r\n        this.openKeys = [];\r\n      } else {\r\n        this.openKeys = this.cacheOpenKeys;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    this.selectedKeysMap = {};\r\n    this.openKeysMap = {};\r\n    const menuData = this.getMenuData(this.$router.options.routes);\r\n    return {\r\n      menuData,\r\n      selectedKeys: this.selectedKeysMap[this.$route.path],\r\n      openKeys: this.collapsed ? [] : this.openKeysMap[this.$route.path]\r\n    };\r\n  },\r\n  methods: {\r\n    toggleCollapsed() {\r\n      this.collapsed = !this.collapsed;\r\n    },\r\n    getMenuData(routes = [], parentKeys = [], selectedKey) {\r\n      const menuData = [];\r\n      for (let item of routes) {\r\n        if (item.meta && item.meta.authority && !check(item.meta.authority)) {\r\n          continue;\r\n        }\r\n        if (item.name && !item.hideInMenu) {\r\n          this.openKeysMap[item.path] = parentKeys;\r\n          this.selectedKeysMap[item.path] = [selectedKey || item.path];\r\n          const newItem = { ...item };\r\n          delete newItem.children;\r\n          if (item.children && !item.hideChildrenInMenu) {\r\n            newItem.children = this.getMenuData(item.children, [\r\n              ...parentKeys,\r\n              item.path\r\n            ]);\r\n          } else {\r\n            this.getMenuData(\r\n              item.children,\r\n              selectedKey ? parentKeys : [...parentKeys, item.path],\r\n              selectedKey || item.path\r\n            );\r\n          }\r\n          menuData.push(newItem);\r\n        } else if (\r\n          !item.hideInMenu &&\r\n          !item.hideChildrenInMenu &&\r\n          item.children\r\n        ) {\r\n          menuData.push(\r\n            ...this.getMenuData(item.children, [...parentKeys, item.path])\r\n          );\r\n        }\r\n      }\r\n\r\n      return menuData;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}