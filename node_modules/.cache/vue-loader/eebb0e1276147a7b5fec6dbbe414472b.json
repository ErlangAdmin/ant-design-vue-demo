{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Chart.vue","mtime":1688627473105},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from \"echarts/lib/echarts\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport \"echarts/lib/component/title\";\r\n\r\nimport debounce from \"lodash/debounce\";\r\nimport { addListener, removeListener } from \"resize-detector\";\r\nexport default {\r\n  props: {\r\n    option: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  watch: {\r\n    option(val) {\r\n      this.chart.setOption(val);\r\n    }\r\n    // option: {\r\n    //   handler(val) {\r\n    //     this.chart.setOption(val);\r\n    //   },\r\n    //   deep: true\r\n    // }\r\n  },\r\n  created() {\r\n    this.resize = debounce(this.resize, 300);\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n    addListener(this.$refs.chartDom, this.resize);\r\n  },\r\n  beforeDestroy() {\r\n    removeListener(this.$refs.chartDom, this.resize);\r\n    this.chart.dispose();\r\n    this.chart = null;\r\n  },\r\n  methods: {\r\n    resize() {\r\n      console.log(\"resize\");\r\n      this.chart.resize();\r\n    },\r\n    renderChart() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chart = echarts.init(this.$refs.chartDom);\r\n      this.chart.setOption(this.option);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div ref=\"chartDom\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts/lib/echarts\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport \"echarts/lib/component/title\";\r\n\r\nimport debounce from \"lodash/debounce\";\r\nimport { addListener, removeListener } from \"resize-detector\";\r\nexport default {\r\n  props: {\r\n    option: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  watch: {\r\n    option(val) {\r\n      this.chart.setOption(val);\r\n    }\r\n    // option: {\r\n    //   handler(val) {\r\n    //     this.chart.setOption(val);\r\n    //   },\r\n    //   deep: true\r\n    // }\r\n  },\r\n  created() {\r\n    this.resize = debounce(this.resize, 300);\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n    addListener(this.$refs.chartDom, this.resize);\r\n  },\r\n  beforeDestroy() {\r\n    removeListener(this.$refs.chartDom, this.resize);\r\n    this.chart.dispose();\r\n    this.chart = null;\r\n  },\r\n  methods: {\r\n    resize() {\r\n      console.log(\"resize\");\r\n      this.chart.resize();\r\n    },\r\n    renderChart() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chart = echarts.init(this.$refs.chartDom);\r\n      this.chart.setOption(this.option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]}]}