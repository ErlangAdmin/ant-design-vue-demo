{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\thread-loader\\dist\\cjs.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\store\\modules\\login.js","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\store\\modules\\login.js","mtime":1688627473136},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1688627669854},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\eslint-loader\\index.js","mtime":1688627692069}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\WORK\\\\github\\\\ant-design-vue\\\\geektime\\\\ant-design-vue-pro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport router from \"../../router\";\nimport { parse } from \"query-string\";\nimport request from \"@/utils/request\";\nimport { setAuthority } from \"@/utils/authority\";\nvar state = {\n  status: undefined\n};\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref, payload) {\n      var commit, response, urlParams, redirect, redirectUrlParams;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              console.log(payload);\n              _context.next = 4;\n              return request({\n                url: \"/api/login/account\",\n                method: \"POST\",\n                data: payload\n              });\n\n            case 4:\n              response = _context.sent.data;\n              console.log(response);\n              commit(\"changeLoginStatus\", response); // Login successfully\n\n              if (response.status === \"ok\") {\n                urlParams = new URL(window.location.href);\n                redirect = parse(location.search).redirect;\n\n                if (redirect) {\n                  redirectUrlParams = new URL(redirect);\n\n                  if (redirectUrlParams.origin === urlParams.origin) {\n                    redirect = redirect.substr(urlParams.origin.length);\n\n                    if (redirect.match(/^\\/.*#/)) {\n                      redirect = redirect.substr(redirect.indexOf(\"#\") + 1);\n                    }\n                  } else {\n                    redirect = null;\n                  }\n                }\n\n                router.replace({\n                  path: redirect || \"/\"\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function login(_x, _x2) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2) {\n      var commit, redirect;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              commit(\"changeLoginStatus\", {\n                status: false,\n                currentAuthority: \"guest\"\n              });\n              redirect = parse(location.search).redirect; // redirect\n\n              if (window.location.pathname !== \"/user/login\" && !redirect) {\n                router.replace({\n                  path: \"/user/login\",\n                  query: {\n                    redirect: window.location.href\n                  }\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function logout(_x3) {\n      return _logout.apply(this, arguments);\n    }\n\n    return logout;\n  }(),\n  register: function () {\n    var _register = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, payload) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              console.log(payload);\n              _context3.next = 4;\n              return request({\n                url: \"/api/register\",\n                method: \"POST\",\n                data: payload\n              });\n\n            case 4:\n              response = _context3.sent.data;\n              console.log(response);\n\n              if (response.status === \"ok\") {\n                commit(\"changeLoginStatus\", response);\n                router.push({\n                  name: \"register.result\",\n                  params: {\n                    account: payload.mail\n                  }\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function register(_x4, _x5) {\n      return _register.apply(this, arguments);\n    }\n\n    return register;\n  }(),\n  // eslint-disable-next-line no-unused-vars\n  getCaptcha: function () {\n    var _getCaptcha = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, payload) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              console.log(payload);\n              _context4.next = 4;\n              return request({\n                url: \"/api/captcha?mobile=\".concat(payload.mobile),\n                method: \"GET\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getCaptcha(_x6, _x7) {\n      return _getCaptcha.apply(this, arguments);\n    }\n\n    return getCaptcha;\n  }()\n};\nvar mutations = {\n  changeLoginStatus: function changeLoginStatus(state, payload) {\n    setAuthority(payload.currentAuthority);\n    state.status = payload.status;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\store\\modules\\login.js"],"names":["router","parse","request","setAuthority","state","status","undefined","actions","login","payload","commit","console","log","url","method","data","response","urlParams","URL","window","location","href","redirect","search","redirectUrlParams","origin","substr","length","match","indexOf","replace","path","logout","currentAuthority","pathname","query","register","push","name","params","account","mail","getCaptcha","mobile","mutations","changeLoginStatus","namespaced"],"mappings":"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","sourcesContent":["import router from \"../../router\";\r\nimport { parse } from \"query-string\";\r\nimport request from \"@/utils/request\";\r\nimport { setAuthority } from \"@/utils/authority\";\r\n\r\nconst state = {\r\n  status: undefined\r\n};\r\n\r\nconst actions = {\r\n  async login({ commit }, payload) {\r\n    console.log(payload);\r\n    const response = (await request({\r\n      url: \"/api/login/account\",\r\n      method: \"POST\",\r\n      data: payload\r\n    })).data;\r\n    console.log(response);\r\n    commit(\"changeLoginStatus\", response);\r\n    // Login successfully\r\n    if (response.status === \"ok\") {\r\n      const urlParams = new URL(window.location.href);\r\n      let redirect = parse(location.search).redirect;\r\n      if (redirect) {\r\n        const redirectUrlParams = new URL(redirect);\r\n        if (redirectUrlParams.origin === urlParams.origin) {\r\n          redirect = redirect.substr(urlParams.origin.length);\r\n          if (redirect.match(/^\\/.*#/)) {\r\n            redirect = redirect.substr(redirect.indexOf(\"#\") + 1);\r\n          }\r\n        } else {\r\n          redirect = null;\r\n        }\r\n      }\r\n      router.replace({ path: redirect || \"/\" });\r\n    }\r\n  },\r\n  async logout({ commit }) {\r\n    commit(\"changeLoginStatus\", {\r\n      status: false,\r\n      currentAuthority: \"guest\"\r\n    });\r\n    const redirect = parse(location.search).redirect;\r\n    // redirect\r\n    if (window.location.pathname !== \"/user/login\" && !redirect) {\r\n      router.replace({\r\n        path: \"/user/login\",\r\n        query: {\r\n          redirect: window.location.href\r\n        }\r\n      });\r\n    }\r\n  },\r\n  async register({ commit }, payload) {\r\n    console.log(payload);\r\n    const response = (await request({\r\n      url: \"/api/register\",\r\n      method: \"POST\",\r\n      data: payload\r\n    })).data;\r\n    console.log(response);\r\n    if (response.status === \"ok\") {\r\n      commit(\"changeLoginStatus\", response);\r\n      router.push({\r\n        name: \"register.result\",\r\n        params: {\r\n          account: payload.mail\r\n        }\r\n      });\r\n    }\r\n  },\r\n  // eslint-disable-next-line no-unused-vars\r\n  async getCaptcha({ commit }, payload) {\r\n    console.log(payload);\r\n    await request({\r\n      url: `/api/captcha?mobile=${payload.mobile}`,\r\n      method: \"GET\"\r\n    });\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  changeLoginStatus(state, payload) {\r\n    setAuthority(payload.currentAuthority);\r\n    state.status = payload.status;\r\n  }\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}