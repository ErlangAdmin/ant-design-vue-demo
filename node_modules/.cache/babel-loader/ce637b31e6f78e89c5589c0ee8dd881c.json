{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\views\\User\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\views\\User\\Register.vue","mtime":1688627473142},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\WORK\\\\github\\\\ant-design-vue\\\\geektime\\\\ant-design-vue-pro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from \"vuex\";\nvar passwordProgressMap = {\n  ok: \"success\",\n  pass: \"normal\",\n  poor: \"exception\"\n};\nexport default {\n  components: {\n    VNodes: {\n      functional: true,\n      render: function render(h, ctx) {\n        return ctx.props.vnodes;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      form: this.$form.createForm(this),\n      count: 0,\n      confirmDirty: false,\n      visible: false,\n      help: \"\",\n      prefix: \"86\",\n      submitting: false\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearInterval(this.interval);\n  },\n  methods: _objectSpread({}, mapActions(\"login\", [\"register\"]), {\n    handleSubmit: function handleSubmit(e) {\n      var _this = this;\n\n      e.preventDefault();\n      var form = this.form;\n      form.validateFields({\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          _this.submitting = true;\n          var prefix = _this.prefix;\n\n          _this.register(_objectSpread({}, values, {\n            prefix: prefix\n          })).then(function () {\n            _this.submitting = false;\n          });\n        }\n      });\n    },\n    runGetCaptchaCountDown: function runGetCaptchaCountDown() {\n      var _this2 = this;\n\n      this.count = 59;\n      this.interval = setInterval(function () {\n        _this2.count -= 1;\n\n        if (_this2.count === 0) {\n          clearInterval(_this2.interval);\n        }\n      }, 1000);\n    },\n    onGetCaptcha: function onGetCaptcha() {\n      this.runGetCaptchaCountDown();\n    },\n    changePrefix: function changePrefix(value) {\n      this.prefix = value;\n    },\n    getPasswordStatus: function getPasswordStatus() {\n      var form = this.form;\n      var value = form.getFieldValue(\"password\");\n\n      if (value && value.length > 9) {\n        return \"ok\";\n      }\n\n      if (value && value.length > 5) {\n        return \"pass\";\n      }\n\n      return \"poor\";\n    },\n    passwordStatusMap: function passwordStatusMap() {\n      var h = this.$createElement;\n      var passwordStatusMap = {\n        ok: h(\"div\", {\n          \"class\": \"success\"\n        }, [\"\\u5F3A\\u5EA6\\uFF1A\\u5F3A\"]),\n        pass: h(\"div\", {\n          \"class\": \"warning\"\n        }, [\"\\u5F3A\\u5EA6\\uFF1A\\u4E2D\"]),\n        poor: h(\"div\", {\n          \"class\": \"error\"\n        }, [\"\\u5F3A\\u5EA6\\uFF1A\\u592A\\u77ED\"])\n      };\n      return passwordStatusMap[this.getPasswordStatus()];\n    },\n    checkPassword: function checkPassword(rule, value, callback) {\n      var visible = this.visible,\n          confirmDirty = this.confirmDirty;\n\n      if (!value) {\n        this.help = \"请输入密码！\", this.visible = !!value, callback(\"error\");\n      } else {\n        this.help = \"\";\n\n        if (!visible) {\n          this.visible = !!value;\n        }\n\n        if (value.length < 6) {\n          callback(\"error\");\n        } else {\n          var form = this.form;\n\n          if (value && confirmDirty) {\n            form.validateFields([\"confirm\"], {\n              force: true\n            });\n          }\n\n          callback();\n        }\n      }\n    },\n    renderPasswordProgress: function renderPasswordProgress() {\n      var h = this.$createElement;\n      var form = this.form;\n      var value = form.getFieldValue(\"password\");\n      var passwordStatus = this.getPasswordStatus();\n      return value && value.length ? h(\"div\", {\n        \"class\": \"progress-\".concat(passwordStatus)\n      }, [h(\"a-progress\", {\n        \"attrs\": {\n          \"status\": passwordProgressMap[passwordStatus],\n          \"strokeWidth\": 6,\n          \"percent\": value.length * 10 > 100 ? 100 : value.length * 10,\n          \"showInfo\": false\n        },\n        \"class\": \"progress\"\n      })]) : null;\n    },\n    checkConfirm: function checkConfirm(rule, value, callback) {\n      var form = this.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"两次输入的密码不匹配!\");\n      } else {\n        callback();\n      }\n    }\n  })\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <h3>注册</h3>\r\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          placeholder=\"邮箱\"\r\n          v-decorator=\"[\r\n            'mail',\r\n            {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入邮箱地址！'\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: '邮箱地址格式错误！'\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item :help=\"help\">\r\n        <a-popover\r\n          :overlayStyle=\"{ width: '240px' }\"\r\n          placement=\"right\"\r\n          :visible=\"visible\"\r\n        >\r\n          <template slot=\"content\">\r\n            <div style=\"padding: 4px 0\">\r\n              <VNodes :vnodes=\"passwordStatusMap()\" />\r\n              <VNodes :vnodes=\"renderPasswordProgress()\" />\r\n              <div style=\"margin-top: 10\">\r\n                请至少输入 6 个字符。请不要使用容易被猜到的密码。\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <a-input\r\n            type=\"password\"\r\n            size=\"large\"\r\n            placeholder=\"至少6位密码，区分大小写\"\r\n            v-decorator=\"[\r\n              'password',\r\n              {\r\n                rules: [{ validator: this.checkPassword }]\r\n              }\r\n            ]\"\r\n          />\r\n        </a-popover>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-input\r\n          type=\"password\"\r\n          size=\"large\"\r\n          placeholder=\"确认密码\"\r\n          v-decorator=\"[\r\n            'confirm',\r\n            {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请确认密码！'\r\n                },\r\n                {\r\n                  validator: this.checkConfirm\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-input-group compact>\r\n          <a-select\r\n            size=\"large\"\r\n            :value=\"prefix\"\r\n            style=\"width: 20%\"\r\n            @change=\"changePrefix\"\r\n          >\r\n            <a-select-option value=\"86\">+86</a-select-option>\r\n            <a-select-option value=\"87\">+87</a-select-option>\r\n          </a-select>\r\n          <a-input\r\n            size=\"large\"\r\n            style=\"width: 80%\"\r\n            placeholder=\"手机号\"\r\n            v-decorator=\"[\r\n              'mobile',\r\n              {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: '请输入手机号！'\r\n                  },\r\n                  {\r\n                    pattern: /^\\d{11}$/,\r\n                    message: '手机号格式错误！'\r\n                  }\r\n                ]\r\n              }\r\n            ]\"\r\n          />\r\n        </a-input-group>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-row :gutter=\"8\">\r\n          <a-col :span=\"16\">\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"Captcha\"\r\n              placeholder=\"验证码\"\r\n              v-decorator=\"[\r\n                'captcha',\r\n                {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入验证码！'\r\n                    }\r\n                  ]\r\n                }\r\n              ]\"\r\n            />\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-button\r\n              class=\"getCaptcha\"\r\n              size=\"large\"\r\n              @click=\"onGetCaptcha\"\r\n              :disabled=\"!!count\"\r\n              >{{ count ? `${count} 秒` : \"获取验证码\" }}</a-button\r\n            >\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          class=\"submit\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          :loading=\"submitting\"\r\n          >注册</a-button\r\n        >\r\n        <router-link class=\"login\" to=\"/user/login\">\r\n          使用已有账户登录\r\n        </router-link>\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nconst passwordProgressMap = {\r\n  ok: \"success\",\r\n  pass: \"normal\",\r\n  poor: \"exception\"\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    VNodes: {\r\n      functional: true,\r\n      render: (h, ctx) => ctx.props.vnodes\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      count: 0,\r\n      confirmDirty: false,\r\n      visible: false,\r\n      help: \"\",\r\n      prefix: \"86\",\r\n      submitting: false\r\n    };\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.interval);\r\n  },\r\n  methods: {\r\n    ...mapActions(\"login\", [\"register\"]),\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const { form } = this;\r\n      form.validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          this.submitting = true;\r\n          const { prefix } = this;\r\n          this.register({\r\n            ...values,\r\n            prefix\r\n          }).then(() => {\r\n            this.submitting = false;\r\n          });\r\n        }\r\n      });\r\n    },\r\n    runGetCaptchaCountDown() {\r\n      this.count = 59;\r\n      this.interval = setInterval(() => {\r\n        this.count -= 1;\r\n        if (this.count === 0) {\r\n          clearInterval(this.interval);\r\n        }\r\n      }, 1000);\r\n    },\r\n    onGetCaptcha() {\r\n      this.runGetCaptchaCountDown();\r\n    },\r\n    changePrefix(value) {\r\n      this.prefix = value;\r\n    },\r\n    getPasswordStatus() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      if (value && value.length > 9) {\r\n        return \"ok\";\r\n      }\r\n      if (value && value.length > 5) {\r\n        return \"pass\";\r\n      }\r\n      return \"poor\";\r\n    },\r\n    passwordStatusMap() {\r\n      const passwordStatusMap = {\r\n        ok: <div class=\"success\">强度：强</div>,\r\n        pass: <div class=\"warning\">强度：中</div>,\r\n        poor: <div class=\"error\">强度：太短</div>\r\n      };\r\n      return passwordStatusMap[this.getPasswordStatus()];\r\n    },\r\n    checkPassword(rule, value, callback) {\r\n      const { visible, confirmDirty } = this;\r\n      if (!value) {\r\n        (this.help = \"请输入密码！\"),\r\n          (this.visible = !!value),\r\n          callback(\"error\");\r\n      } else {\r\n        this.help = \"\";\r\n        if (!visible) {\r\n          this.visible = !!value;\r\n        }\r\n        if (value.length < 6) {\r\n          callback(\"error\");\r\n        } else {\r\n          const { form } = this;\r\n          if (value && confirmDirty) {\r\n            form.validateFields([\"confirm\"], { force: true });\r\n          }\r\n          callback();\r\n        }\r\n      }\r\n    },\r\n    renderPasswordProgress() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      const passwordStatus = this.getPasswordStatus();\r\n      return value && value.length ? (\r\n        <div class={`progress-${passwordStatus}`}>\r\n          <a-progress\r\n            status={passwordProgressMap[passwordStatus]}\r\n            class=\"progress\"\r\n            strokeWidth={6}\r\n            percent={value.length * 10 > 100 ? 100 : value.length * 10}\r\n            showInfo={false}\r\n          />\r\n        </div>\r\n      ) : null;\r\n    },\r\n    checkConfirm(rule, value, callback) {\r\n      const { form } = this;\r\n      if (value && value !== form.getFieldValue(\"password\")) {\r\n        callback(\"两次输入的密码不匹配!\");\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import \"~ant-design-vue/lib/style/themes/default.less\";\r\n\r\n.main {\r\n  width: 388px;\r\n  margin: 0 auto;\r\n\r\n  /deep/ .ant-form-item {\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  .submit {\r\n    width: 50%;\r\n  }\r\n\r\n  .login {\r\n    float: right;\r\n    line-height: @btn-height-lg;\r\n  }\r\n}\r\n\r\n.success,\r\n.warning,\r\n.error {\r\n  transition: color 0.3s;\r\n}\r\n\r\n.success {\r\n  color: @success-color;\r\n}\r\n\r\n.warning {\r\n  color: @warning-color;\r\n}\r\n\r\n.error {\r\n  color: @error-color;\r\n}\r\n\r\n.progress-pass > .progress {\r\n  /deep/ .ant-progress-bg {\r\n    background-color: @warning-color;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/User"}]}