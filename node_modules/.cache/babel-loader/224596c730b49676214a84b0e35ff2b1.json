{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\NoticeIcon\\NoticeIcon.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\NoticeIcon\\NoticeIcon.vue","mtime":1688627473129},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport _defineProperty from \"D:\\\\WORK\\\\github\\\\ant-design-vue\\\\geektime\\\\ant-design-vue-pro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\WORK\\\\github\\\\ant-design-vue\\\\geektime\\\\ant-design-vue-pro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport HeaderDropdown from \"../HeaderDropdown\";\nimport NoticeList from \"./NoticeList\";\nimport PropTypes from \"ant-design-vue/lib/_util/vue-types\";\nimport { getOptionProps, filterEmpty } from \"ant-design-vue/lib/_util/props-util\";\nimport _map from \"lodash/map\";\nvar prefixCls = \"notice-icon\";\nexport default {\n  name: \"NoticeIcon\",\n  props: {\n    count: PropTypes.number.def(0),\n    className: PropTypes.string,\n    popupVisible: PropTypes.bool,\n    loading: PropTypes.bool,\n    clearText: PropTypes.string,\n    viewMoreText: PropTypes.string,\n    clearClose: PropTypes.bool.def(false)\n  },\n  data: function data() {\n    return {\n      visible: false,\n      emptyImage: \"https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg\"\n    };\n  },\n  methods: {\n    handleVisibleChange: function handleVisibleChange(visible) {\n      this.visible = visible;\n    },\n    handleTabChange: function handleTabChange(tabType) {\n      this.$emit(\"tabChange\", tabType);\n    },\n    // eslint-disable-next-line\n    getNotificationBox: function getNotificationBox(h) {\n      var _this = this;\n\n      var loading = this.loading,\n          clearText = this.clearText,\n          viewMoreText = this.viewMoreText;\n      var children = filterEmpty(this.$slots.default);\n\n      if (!children) {\n        return null;\n      }\n\n      var panes = _map(children, function (child) {\n        var childProps = getOptionProps(child);\n        var list = childProps.list,\n            title = childProps.title,\n            count = childProps.count,\n            tabKey = childProps.tabKey,\n            showClear = childProps.showClear,\n            emptyText = childProps.emptyText,\n            showViewMore = childProps.showViewMore;\n        var len = list && list.length ? list.length : 0;\n        var msgCount = count || count === 0 ? count : len;\n        var tabTitle = msgCount > 0 ? \"\".concat(title, \" (\").concat(msgCount, \")\") : title;\n        var props = {\n          clearText: clearText,\n          emptyText: emptyText,\n          viewMoreText: viewMoreText,\n          showClear: showClear,\n          showViewMore: showViewMore,\n          title: title,\n          onClick: function onClick(item) {\n            return _this.$emit(\"itemClick\", item, childProps);\n          },\n          onClear: function onClear() {\n            return _this.$emit(\"clear\", title, tabKey);\n          },\n          onViewMore: function onViewMore(event) {\n            return _this.$emit(\"viewMore\", childProps, event);\n          }\n        };\n        return h(\"ATabPane\", {\n          \"attrs\": {\n            \"tab\": tabTitle\n          },\n          \"key\": tabKey\n        }, [h(NoticeList, {\n          \"attrs\": {\n            \"data\": list\n          },\n          \"props\": _objectSpread({}, props)\n        })]);\n      });\n\n      return h(\"div\", [h(\"ASpin\", {\n        \"attrs\": {\n          \"spinning\": loading,\n          \"delay\": 0\n        }\n      }, [h(\"ATabs\", {\n        \"class\": \"\".concat(prefixCls, \"__tabs\"),\n        \"on\": {\n          \"change\": this.handleTabChange\n        }\n      }, [panes])])]);\n    }\n  },\n  render: function render(h) {\n    var _noticeButtonClass;\n\n    var className = this.className,\n        count = this.count,\n        visible = this.visible,\n        popupVisible = this.popupVisible;\n    var noticeButtonClass = (_noticeButtonClass = {}, _defineProperty(_noticeButtonClass, className, !!className), _defineProperty(_noticeButtonClass, \"opened\", !!visible), _defineProperty(_noticeButtonClass, \"\".concat(prefixCls, \"__notice-button\"), true), _noticeButtonClass);\n    var notificationBox = this.getNotificationBox(h);\n    var NoticeBellIcon = h(\"a-icon\", {\n      \"attrs\": {\n        \"type\": \"bell\"\n      },\n      \"class\": \"\".concat(prefixCls, \"__icon\")\n    });\n    var trigger = h(\"span\", {\n      \"class\": noticeButtonClass\n    }, [h(\"ABadge\", {\n      \"attrs\": {\n        \"count\": count\n      },\n      \"style\": {\n        boxShadow: \"none\"\n      },\n      \"class\": \"\".concat(prefixCls, \"__badge\")\n    }, [NoticeBellIcon])]);\n\n    if (!notificationBox) {\n      return trigger;\n    }\n\n    var popoverProps = {};\n\n    if (\"popupVisible\" in this) {\n      popoverProps.visible = popupVisible;\n    }\n\n    return h(HeaderDropdown, _mergeJSXProps([{\n      \"attrs\": {\n        \"placement\": \"bottomRight\",\n        \"overlayClassName\": \"\".concat(prefixCls, \"__popover\"),\n        \"trigger\": [\"click\"],\n        \"visible\": visible,\n        \"overlay\": notificationBox\n      },\n      \"on\": {\n        \"visibleChange\": this.handleVisibleChange\n      }\n    }, popoverProps]), [trigger]);\n  }\n};",{"version":3,"sources":["NoticeIcon.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport HeaderDropdown from \"../HeaderDropdown\";\r\nimport NoticeList from \"./NoticeList\";\r\nimport PropTypes from \"ant-design-vue/lib/_util/vue-types\";\r\nimport {\r\n  getOptionProps,\r\n  filterEmpty\r\n} from \"ant-design-vue/lib/_util/props-util\";\r\nimport _map from \"lodash/map\";\r\n\r\nconst prefixCls = \"notice-icon\";\r\n\r\nexport default {\r\n  name: \"NoticeIcon\",\r\n  props: {\r\n    count: PropTypes.number.def(0),\r\n    className: PropTypes.string,\r\n    popupVisible: PropTypes.bool,\r\n    loading: PropTypes.bool,\r\n    clearText: PropTypes.string,\r\n    viewMoreText: PropTypes.string,\r\n    clearClose: PropTypes.bool.def(false)\r\n  },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      emptyImage:\r\n        \"https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg\"\r\n    };\r\n  },\r\n  methods: {\r\n    handleVisibleChange(visible) {\r\n      this.visible = visible;\r\n    },\r\n    handleTabChange(tabType) {\r\n      this.$emit(\"tabChange\", tabType);\r\n    },\r\n    // eslint-disable-next-line\r\n    getNotificationBox(h) {\r\n      const { loading, clearText, viewMoreText } = this;\r\n      const children = filterEmpty(this.$slots.default);\r\n      if (!children) {\r\n        return null;\r\n      }\r\n      const panes = _map(children, child => {\r\n        const childProps = getOptionProps(child);\r\n        const {\r\n          list,\r\n          title,\r\n          count,\r\n          tabKey,\r\n          showClear,\r\n          emptyText,\r\n          showViewMore\r\n        } = childProps;\r\n        const len = list && list.length ? list.length : 0;\r\n        const msgCount = count || count === 0 ? count : len;\r\n        const tabTitle = msgCount > 0 ? `${title} (${msgCount})` : title;\r\n        const props = {\r\n          clearText,\r\n          emptyText,\r\n          viewMoreText,\r\n          showClear,\r\n          showViewMore,\r\n          title,\r\n          onClick: item => this.$emit(\"itemClick\", item, childProps),\r\n          onClear: () => this.$emit(\"clear\", title, tabKey),\r\n          onViewMore: event => this.$emit(\"viewMore\", childProps, event)\r\n        };\r\n        return (\r\n          <ATabPane tab={tabTitle} key={tabKey}>\r\n            <NoticeList data={list} {...{ props }} />\r\n          </ATabPane>\r\n        );\r\n      });\r\n      return (\r\n        <div>\r\n          <ASpin spinning={loading} delay={0}>\r\n            <ATabs class={`${prefixCls}__tabs`} onChange={this.handleTabChange}>\r\n              {panes}\r\n            </ATabs>\r\n          </ASpin>\r\n        </div>\r\n      );\r\n    }\r\n  },\r\n  render(h) {\r\n    const { className, count, visible, popupVisible } = this;\r\n    const noticeButtonClass = {\r\n      [className]: !!className,\r\n      opened: !!visible,\r\n      [`${prefixCls}__notice-button`]: true\r\n    };\r\n    const notificationBox = this.getNotificationBox(h);\r\n    const NoticeBellIcon = <a-icon type=\"bell\" class={`${prefixCls}__icon`} />;\r\n    const trigger = (\r\n      <span class={noticeButtonClass}>\r\n        <ABadge\r\n          count={count}\r\n          style={{ boxShadow: \"none\" }}\r\n          class={`${prefixCls}__badge`}\r\n        >\r\n          {NoticeBellIcon}\r\n        </ABadge>\r\n      </span>\r\n    );\r\n    if (!notificationBox) {\r\n      return trigger;\r\n    }\r\n    const popoverProps = {};\r\n    if (\"popupVisible\" in this) {\r\n      popoverProps.visible = popupVisible;\r\n    }\r\n    return (\r\n      <HeaderDropdown\r\n        placement=\"bottomRight\"\r\n        overlayClassName={`${prefixCls}__popover`}\r\n        trigger={[\"click\"]}\r\n        visible={visible}\r\n        onVisibleChange={this.handleVisibleChange}\r\n        overlay={notificationBox}\r\n        {...popoverProps}\r\n      >\r\n        {trigger}\r\n      </HeaderDropdown>\r\n    );\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" src=\"./NoticeIcon.less\"></style>\r\n"],"sourceRoot":"src/components/NoticeIcon"}]}