{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\Chart.vue","mtime":1688627473105},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport echarts from \"echarts/lib/echarts\";\nimport \"echarts/lib/chart/bar\";\nimport \"echarts/lib/component/title\";\nimport debounce from \"lodash/debounce\";\nimport { addListener, removeListener } from \"resize-detector\";\nexport default {\n  props: {\n    option: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    option: function option(val) {\n      this.chart.setOption(val);\n    } // option: {\n    //   handler(val) {\n    //     this.chart.setOption(val);\n    //   },\n    //   deep: true\n    // }\n\n  },\n  created: function created() {\n    this.resize = debounce(this.resize, 300);\n  },\n  mounted: function mounted() {\n    this.renderChart();\n    addListener(this.$refs.chartDom, this.resize);\n  },\n  beforeDestroy: function beforeDestroy() {\n    removeListener(this.$refs.chartDom, this.resize);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    resize: function resize() {\n      console.log(\"resize\");\n      this.chart.resize();\n    },\n    renderChart: function renderChart() {\n      // 基于准备好的dom，初始化echarts实例\n      this.chart = echarts.init(this.$refs.chartDom);\n      this.chart.setOption(this.option);\n    }\n  }\n};",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":";;;;AAKA,OAAA,OAAA,MAAA,qBAAA;AACA,OAAA,uBAAA;AACA,OAAA,6BAAA;AAEA,OAAA,QAAA,MAAA,iBAAA;AACA,SAAA,WAAA,EAAA,cAAA,QAAA,iBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GADA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,GAAA;AACA,KAHA,CAIA;AACA;AACA;AACA;AACA;AACA;;AATA,GAPA;AAkBA,EAAA,OAlBA,qBAkBA;AACA,SAAA,MAAA,GAAA,QAAA,CAAA,KAAA,MAAA,EAAA,GAAA,CAAA;AACA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,SAAA,WAAA;AACA,IAAA,WAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AACA,GAxBA;AAyBA,EAAA,aAzBA,2BAyBA;AACA,IAAA,cAAA,CAAA,KAAA,KAAA,CAAA,QAAA,EAAA,KAAA,MAAA,CAAA;AACA,SAAA,KAAA,CAAA,OAAA;AACA,SAAA,KAAA,GAAA,IAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,WAAA,KAAA,CAAA,MAAA;AACA,KAJA;AAKA,IAAA,WALA,yBAKA;AACA;AACA,WAAA,KAAA,GAAA,OAAA,CAAA,IAAA,CAAA,KAAA,KAAA,CAAA,QAAA,CAAA;AACA,WAAA,KAAA,CAAA,SAAA,CAAA,KAAA,MAAA;AACA;AATA;AA9BA,CAAA","sourcesContent":["<template>\r\n  <div ref=\"chartDom\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from \"echarts/lib/echarts\";\r\nimport \"echarts/lib/chart/bar\";\r\nimport \"echarts/lib/component/title\";\r\n\r\nimport debounce from \"lodash/debounce\";\r\nimport { addListener, removeListener } from \"resize-detector\";\r\nexport default {\r\n  props: {\r\n    option: {\r\n      type: Object,\r\n      default: () => {}\r\n    }\r\n  },\r\n  watch: {\r\n    option(val) {\r\n      this.chart.setOption(val);\r\n    }\r\n    // option: {\r\n    //   handler(val) {\r\n    //     this.chart.setOption(val);\r\n    //   },\r\n    //   deep: true\r\n    // }\r\n  },\r\n  created() {\r\n    this.resize = debounce(this.resize, 300);\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n    addListener(this.$refs.chartDom, this.resize);\r\n  },\r\n  beforeDestroy() {\r\n    removeListener(this.$refs.chartDom, this.resize);\r\n    this.chart.dispose();\r\n    this.chart = null;\r\n  },\r\n  methods: {\r\n    resize() {\r\n      console.log(\"resize\");\r\n      this.chart.resize();\r\n    },\r\n    renderChart() {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      this.chart = echarts.init(this.$refs.chartDom);\r\n      this.chart.setOption(this.option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"sourceRoot":"src/components"}]}