{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\NoticeIcon\\NoticeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\components\\NoticeIcon\\NoticeList.vue","mtime":1688627473130},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["import _defineProperty from \"D:\\\\WORK\\\\github\\\\ant-design-vue\\\\geektime\\\\ant-design-vue-pro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport PropTypes from \"ant-design-vue/lib/_util/vue-types\";\nvar prefixCls = \"notice-list\";\n\nvar genCls = function genCls(moduleName) {\n  return \"\".concat(prefixCls, \"__\").concat(moduleName);\n};\n\nexport default {\n  name: \"NoticeList\",\n  // functional: true,\n  props: {\n    count: PropTypes.number,\n    list: PropTypes.array,\n    data: PropTypes.array.def([]),\n    title: PropTypes.string,\n    tabKey: PropTypes.string,\n    showClear: PropTypes.bool.def(true),\n    showViewMore: PropTypes.bool.def(false),\n    emptyText: PropTypes.string,\n    clearText: PropTypes.string,\n    viewMoreText: PropTypes.string,\n    onViewMore: PropTypes.func.def(function () {\n      return null;\n    }),\n    onClick: PropTypes.func.def(function () {\n      return null;\n    }),\n    onClear: PropTypes.func.def(function () {\n      return null;\n    })\n  },\n  // eslint-disable-next-line\n  render: function render(h) {\n    var title = this.title,\n        data = this.data,\n        emptyText = this.emptyText,\n        clearText = this.clearText,\n        showClear = this.showClear,\n        showViewMore = this.showViewMore,\n        viewMoreText = this.viewMoreText,\n        onClick = this.onClick,\n        onClear = this.onClear,\n        onViewMore = this.onViewMore;\n\n    if (data.length === 0) {\n      return h(\"div\", {\n        \"class\": genCls(\"not-found\")\n      }, [h(\"img\", {\n        \"attrs\": {\n          \"src\": \"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\",\n          \"alt\": \"not found\"\n        }\n      }), h(\"div\", [emptyText])]);\n    }\n\n    return h(\"div\", [h(\"AList\", {\n      \"class\": genCls(\"list\"),\n      \"attrs\": {\n        \"dataSource\": data,\n        \"renderItem\": function renderItem(item, i) {\n          var _itemCls;\n\n          var itemCls = (_itemCls = {}, _defineProperty(_itemCls, genCls(\"list-item\"), true), _defineProperty(_itemCls, genCls(\"list-read\"), !!item.read), _itemCls);\n          var leftIcon = item.avatar ? typeof item.avatar === \"string\" ? h(\"AAvatar\", {\n            \"class\": genCls(\"list-item__avatar\"),\n            \"attrs\": {\n              \"src\": item.avatar\n            }\n          }) : h(\"span\", {\n            \"class\": genCls(\"list-item__icon-element\")\n          }, [item.avatar]) : \"\";\n          var extra = item.extra;\n\n          if (item.extra && item.status) {\n            var color = {\n              todo: \"\",\n              processing: \"blue\",\n              urgent: \"red\",\n              doing: \"gold\"\n            }[item.status];\n            extra = item.extra ? typeof item.extra === \"string\" ? h(\"ATag\", {\n              \"attrs\": {\n                \"color\": color\n              },\n              \"style\": {\n                marginRight: 0\n              }\n            }, [item.extra]) : item.extra : \"\";\n          }\n\n          return h(\"AListItem\", {\n            \"class\": itemCls,\n            \"key\": item.key || i,\n            \"on\": {\n              \"click\": function click() {\n                return onClick && onClick(item);\n              }\n            }\n          }, [h(\"AListItemMeta\", {\n            \"class\": genCls(\"list-item__meta\"),\n            \"attrs\": {\n              \"avatar\": leftIcon,\n              \"title\": h(\"div\", {\n                \"class\": genCls(\"list-item__title\")\n              }, [item.title, h(\"div\", {\n                \"class\": genCls(\"list-item__extra\")\n              }, [extra])]),\n              \"description\": h(\"div\", [h(\"div\", {\n                \"class\": genCls(\"list-item__description\")\n              }, [item.description]), h(\"div\", {\n                \"class\": genCls(\"list-item__datetime\")\n              }, [item.datetime])])\n            }\n          })]);\n        }\n      }\n    }), h(\"div\", {\n      \"class\": genCls(\"bottom-bar\")\n    }, [showClear ? h(\"div\", {\n      \"on\": {\n        \"click\": onClear\n      }\n    }, [clearText, \" \", title]) : \"\", showViewMore ? h(\"div\", {\n      \"on\": {\n        \"click\": function click(e) {\n          return onViewMore && onViewMore(e);\n        }\n      }\n    }, [viewMoreText]) : \"\"])]);\n  }\n};",{"version":3,"sources":["NoticeList.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport PropTypes from \"ant-design-vue/lib/_util/vue-types\";\r\n\r\nconst prefixCls = \"notice-list\";\r\nconst genCls = moduleName => `${prefixCls}__${moduleName}`;\r\n\r\nexport default {\r\n  name: \"NoticeList\",\r\n  // functional: true,\r\n  props: {\r\n    count: PropTypes.number,\r\n    list: PropTypes.array,\r\n    data: PropTypes.array.def([]),\r\n    title: PropTypes.string,\r\n    tabKey: PropTypes.string,\r\n    showClear: PropTypes.bool.def(true),\r\n    showViewMore: PropTypes.bool.def(false),\r\n    emptyText: PropTypes.string,\r\n    clearText: PropTypes.string,\r\n    viewMoreText: PropTypes.string,\r\n    onViewMore: PropTypes.func.def(() => null),\r\n    onClick: PropTypes.func.def(() => null),\r\n    onClear: PropTypes.func.def(() => null)\r\n  },\r\n  // eslint-disable-next-line\r\n  render(h) {\r\n    const {\r\n      title,\r\n      data,\r\n      emptyText,\r\n      clearText,\r\n      showClear,\r\n      showViewMore,\r\n      viewMoreText,\r\n      onClick,\r\n      onClear,\r\n      onViewMore\r\n    } = this;\r\n    if (data.length === 0) {\r\n      return (\r\n        <div class={genCls(\"not-found\")}>\r\n          <img\r\n            src=\"https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg\"\r\n            alt=\"not found\"\r\n          />\r\n          <div>{emptyText}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        <AList\r\n          class={genCls(\"list\")}\r\n          dataSource={data}\r\n          renderItem={(item, i) => {\r\n            const itemCls = {\r\n              [genCls(\"list-item\")]: true,\r\n              [genCls(\"list-read\")]: !!item.read\r\n            };\r\n            const leftIcon = item.avatar ? (\r\n              typeof item.avatar === \"string\" ? (\r\n                <AAvatar\r\n                  class={genCls(\"list-item__avatar\")}\r\n                  src={item.avatar}\r\n                />\r\n              ) : (\r\n                <span class={genCls(\"list-item__icon-element\")}>\r\n                  {item.avatar}\r\n                </span>\r\n              )\r\n            ) : (\r\n              \"\"\r\n            );\r\n            let extra = item.extra;\r\n            if (item.extra && item.status) {\r\n              const color = {\r\n                todo: \"\",\r\n                processing: \"blue\",\r\n                urgent: \"red\",\r\n                doing: \"gold\"\r\n              }[item.status];\r\n              extra = item.extra ? (\r\n                typeof item.extra === \"string\" ? (\r\n                  <ATag color={color} style={{ marginRight: 0 }}>\r\n                    {item.extra}\r\n                  </ATag>\r\n                ) : (\r\n                  item.extra\r\n                )\r\n              ) : (\r\n                \"\"\r\n              );\r\n            }\r\n            return (\r\n              <AListItem\r\n                class={itemCls}\r\n                key={item.key || i}\r\n                onClick={() => onClick && onClick(item)}\r\n              >\r\n                <AListItemMeta\r\n                  class={genCls(\"list-item__meta\")}\r\n                  avatar={leftIcon}\r\n                  title={\r\n                    <div class={genCls(\"list-item__title\")}>\r\n                      {item.title}\r\n                      <div class={genCls(\"list-item__extra\")}>{extra}</div>\r\n                    </div>\r\n                  }\r\n                  description={\r\n                    <div>\r\n                      <div class={genCls(\"list-item__description\")}>\r\n                        {item.description}\r\n                      </div>\r\n                      <div class={genCls(\"list-item__datetime\")}>\r\n                        {item.datetime}\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                />\r\n              </AListItem>\r\n            );\r\n          }}\r\n        />\r\n        <div class={genCls(\"bottom-bar\")}>\r\n          {showClear ? (\r\n            <div onClick={onClear}>\r\n              {clearText} {title}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {showViewMore ? (\r\n            <div onClick={e => onViewMore && onViewMore(e)}>{viewMoreText}</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" src=\"./NoticeList.less\"></style>\r\n"],"sourceRoot":"src/components/NoticeIcon"}]}