{"remainingRequest":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\views\\User\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\src\\views\\User\\Register.vue","mtime":1688627473142},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1688627669854},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\babel-loader\\lib\\index.js","mtime":1688627701159},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688627699002},{"path":"D:\\WORK\\github\\ant-design-vue\\geektime\\ant-design-vue-pro\\node_modules\\vue-loader\\lib\\index.js","mtime":1688627669422}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions } from \"vuex\";\r\n\r\nconst passwordProgressMap = {\r\n  ok: \"success\",\r\n  pass: \"normal\",\r\n  poor: \"exception\"\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    VNodes: {\r\n      functional: true,\r\n      render: (h, ctx) => ctx.props.vnodes\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      count: 0,\r\n      confirmDirty: false,\r\n      visible: false,\r\n      help: \"\",\r\n      prefix: \"86\",\r\n      submitting: false\r\n    };\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.interval);\r\n  },\r\n  methods: {\r\n    ...mapActions(\"login\", [\"register\"]),\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const { form } = this;\r\n      form.validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          this.submitting = true;\r\n          const { prefix } = this;\r\n          this.register({\r\n            ...values,\r\n            prefix\r\n          }).then(() => {\r\n            this.submitting = false;\r\n          });\r\n        }\r\n      });\r\n    },\r\n    runGetCaptchaCountDown() {\r\n      this.count = 59;\r\n      this.interval = setInterval(() => {\r\n        this.count -= 1;\r\n        if (this.count === 0) {\r\n          clearInterval(this.interval);\r\n        }\r\n      }, 1000);\r\n    },\r\n    onGetCaptcha() {\r\n      this.runGetCaptchaCountDown();\r\n    },\r\n    changePrefix(value) {\r\n      this.prefix = value;\r\n    },\r\n    getPasswordStatus() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      if (value && value.length > 9) {\r\n        return \"ok\";\r\n      }\r\n      if (value && value.length > 5) {\r\n        return \"pass\";\r\n      }\r\n      return \"poor\";\r\n    },\r\n    passwordStatusMap() {\r\n      const passwordStatusMap = {\r\n        ok: <div class=\"success\">强度：强</div>,\r\n        pass: <div class=\"warning\">强度：中</div>,\r\n        poor: <div class=\"error\">强度：太短</div>\r\n      };\r\n      return passwordStatusMap[this.getPasswordStatus()];\r\n    },\r\n    checkPassword(rule, value, callback) {\r\n      const { visible, confirmDirty } = this;\r\n      if (!value) {\r\n        (this.help = \"请输入密码！\"),\r\n          (this.visible = !!value),\r\n          callback(\"error\");\r\n      } else {\r\n        this.help = \"\";\r\n        if (!visible) {\r\n          this.visible = !!value;\r\n        }\r\n        if (value.length < 6) {\r\n          callback(\"error\");\r\n        } else {\r\n          const { form } = this;\r\n          if (value && confirmDirty) {\r\n            form.validateFields([\"confirm\"], { force: true });\r\n          }\r\n          callback();\r\n        }\r\n      }\r\n    },\r\n    renderPasswordProgress() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      const passwordStatus = this.getPasswordStatus();\r\n      return value && value.length ? (\r\n        <div class={`progress-${passwordStatus}`}>\r\n          <a-progress\r\n            status={passwordProgressMap[passwordStatus]}\r\n            class=\"progress\"\r\n            strokeWidth={6}\r\n            percent={value.length * 10 > 100 ? 100 : value.length * 10}\r\n            showInfo={false}\r\n          />\r\n        </div>\r\n      ) : null;\r\n    },\r\n    checkConfirm(rule, value, callback) {\r\n      const { form } = this;\r\n      if (value && value !== form.getFieldValue(\"password\")) {\r\n        callback(\"两次输入的密码不匹配!\");\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/User","sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <h3>注册</h3>\r\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\r\n      <a-form-item>\r\n        <a-input\r\n          size=\"large\"\r\n          placeholder=\"邮箱\"\r\n          v-decorator=\"[\r\n            'mail',\r\n            {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入邮箱地址！'\r\n                },\r\n                {\r\n                  type: 'email',\r\n                  message: '邮箱地址格式错误！'\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item :help=\"help\">\r\n        <a-popover\r\n          :overlayStyle=\"{ width: '240px' }\"\r\n          placement=\"right\"\r\n          :visible=\"visible\"\r\n        >\r\n          <template slot=\"content\">\r\n            <div style=\"padding: 4px 0\">\r\n              <VNodes :vnodes=\"passwordStatusMap()\" />\r\n              <VNodes :vnodes=\"renderPasswordProgress()\" />\r\n              <div style=\"margin-top: 10\">\r\n                请至少输入 6 个字符。请不要使用容易被猜到的密码。\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <a-input\r\n            type=\"password\"\r\n            size=\"large\"\r\n            placeholder=\"至少6位密码，区分大小写\"\r\n            v-decorator=\"[\r\n              'password',\r\n              {\r\n                rules: [{ validator: this.checkPassword }]\r\n              }\r\n            ]\"\r\n          />\r\n        </a-popover>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-input\r\n          type=\"password\"\r\n          size=\"large\"\r\n          placeholder=\"确认密码\"\r\n          v-decorator=\"[\r\n            'confirm',\r\n            {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请确认密码！'\r\n                },\r\n                {\r\n                  validator: this.checkConfirm\r\n                }\r\n              ]\r\n            }\r\n          ]\"\r\n        />\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-input-group compact>\r\n          <a-select\r\n            size=\"large\"\r\n            :value=\"prefix\"\r\n            style=\"width: 20%\"\r\n            @change=\"changePrefix\"\r\n          >\r\n            <a-select-option value=\"86\">+86</a-select-option>\r\n            <a-select-option value=\"87\">+87</a-select-option>\r\n          </a-select>\r\n          <a-input\r\n            size=\"large\"\r\n            style=\"width: 80%\"\r\n            placeholder=\"手机号\"\r\n            v-decorator=\"[\r\n              'mobile',\r\n              {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: '请输入手机号！'\r\n                  },\r\n                  {\r\n                    pattern: /^\\d{11}$/,\r\n                    message: '手机号格式错误！'\r\n                  }\r\n                ]\r\n              }\r\n            ]\"\r\n          />\r\n        </a-input-group>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-row :gutter=\"8\">\r\n          <a-col :span=\"16\">\r\n            <a-input\r\n              size=\"large\"\r\n              type=\"Captcha\"\r\n              placeholder=\"验证码\"\r\n              v-decorator=\"[\r\n                'captcha',\r\n                {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: '请输入验证码！'\r\n                    }\r\n                  ]\r\n                }\r\n              ]\"\r\n            />\r\n          </a-col>\r\n          <a-col :span=\"8\">\r\n            <a-button\r\n              class=\"getCaptcha\"\r\n              size=\"large\"\r\n              @click=\"onGetCaptcha\"\r\n              :disabled=\"!!count\"\r\n              >{{ count ? `${count} 秒` : \"获取验证码\" }}</a-button\r\n            >\r\n          </a-col>\r\n        </a-row>\r\n      </a-form-item>\r\n      <a-form-item>\r\n        <a-button\r\n          size=\"large\"\r\n          class=\"submit\"\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          :loading=\"submitting\"\r\n          >注册</a-button\r\n        >\r\n        <router-link class=\"login\" to=\"/user/login\">\r\n          使用已有账户登录\r\n        </router-link>\r\n      </a-form-item>\r\n    </a-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nconst passwordProgressMap = {\r\n  ok: \"success\",\r\n  pass: \"normal\",\r\n  poor: \"exception\"\r\n};\r\n\r\nexport default {\r\n  components: {\r\n    VNodes: {\r\n      functional: true,\r\n      render: (h, ctx) => ctx.props.vnodes\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      form: this.$form.createForm(this),\r\n      count: 0,\r\n      confirmDirty: false,\r\n      visible: false,\r\n      help: \"\",\r\n      prefix: \"86\",\r\n      submitting: false\r\n    };\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.interval);\r\n  },\r\n  methods: {\r\n    ...mapActions(\"login\", [\"register\"]),\r\n    handleSubmit(e) {\r\n      e.preventDefault();\r\n      const { form } = this;\r\n      form.validateFields({ force: true }, (err, values) => {\r\n        if (!err) {\r\n          this.submitting = true;\r\n          const { prefix } = this;\r\n          this.register({\r\n            ...values,\r\n            prefix\r\n          }).then(() => {\r\n            this.submitting = false;\r\n          });\r\n        }\r\n      });\r\n    },\r\n    runGetCaptchaCountDown() {\r\n      this.count = 59;\r\n      this.interval = setInterval(() => {\r\n        this.count -= 1;\r\n        if (this.count === 0) {\r\n          clearInterval(this.interval);\r\n        }\r\n      }, 1000);\r\n    },\r\n    onGetCaptcha() {\r\n      this.runGetCaptchaCountDown();\r\n    },\r\n    changePrefix(value) {\r\n      this.prefix = value;\r\n    },\r\n    getPasswordStatus() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      if (value && value.length > 9) {\r\n        return \"ok\";\r\n      }\r\n      if (value && value.length > 5) {\r\n        return \"pass\";\r\n      }\r\n      return \"poor\";\r\n    },\r\n    passwordStatusMap() {\r\n      const passwordStatusMap = {\r\n        ok: <div class=\"success\">强度：强</div>,\r\n        pass: <div class=\"warning\">强度：中</div>,\r\n        poor: <div class=\"error\">强度：太短</div>\r\n      };\r\n      return passwordStatusMap[this.getPasswordStatus()];\r\n    },\r\n    checkPassword(rule, value, callback) {\r\n      const { visible, confirmDirty } = this;\r\n      if (!value) {\r\n        (this.help = \"请输入密码！\"),\r\n          (this.visible = !!value),\r\n          callback(\"error\");\r\n      } else {\r\n        this.help = \"\";\r\n        if (!visible) {\r\n          this.visible = !!value;\r\n        }\r\n        if (value.length < 6) {\r\n          callback(\"error\");\r\n        } else {\r\n          const { form } = this;\r\n          if (value && confirmDirty) {\r\n            form.validateFields([\"confirm\"], { force: true });\r\n          }\r\n          callback();\r\n        }\r\n      }\r\n    },\r\n    renderPasswordProgress() {\r\n      const { form } = this;\r\n      const value = form.getFieldValue(\"password\");\r\n      const passwordStatus = this.getPasswordStatus();\r\n      return value && value.length ? (\r\n        <div class={`progress-${passwordStatus}`}>\r\n          <a-progress\r\n            status={passwordProgressMap[passwordStatus]}\r\n            class=\"progress\"\r\n            strokeWidth={6}\r\n            percent={value.length * 10 > 100 ? 100 : value.length * 10}\r\n            showInfo={false}\r\n          />\r\n        </div>\r\n      ) : null;\r\n    },\r\n    checkConfirm(rule, value, callback) {\r\n      const { form } = this;\r\n      if (value && value !== form.getFieldValue(\"password\")) {\r\n        callback(\"两次输入的密码不匹配!\");\r\n      } else {\r\n        callback();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import \"~ant-design-vue/lib/style/themes/default.less\";\r\n\r\n.main {\r\n  width: 388px;\r\n  margin: 0 auto;\r\n\r\n  /deep/ .ant-form-item {\r\n    margin-bottom: 24px;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 20px;\r\n    font-size: 16px;\r\n  }\r\n\r\n  .getCaptcha {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  .submit {\r\n    width: 50%;\r\n  }\r\n\r\n  .login {\r\n    float: right;\r\n    line-height: @btn-height-lg;\r\n  }\r\n}\r\n\r\n.success,\r\n.warning,\r\n.error {\r\n  transition: color 0.3s;\r\n}\r\n\r\n.success {\r\n  color: @success-color;\r\n}\r\n\r\n.warning {\r\n  color: @warning-color;\r\n}\r\n\r\n.error {\r\n  color: @error-color;\r\n}\r\n\r\n.progress-pass > .progress {\r\n  /deep/ .ant-progress-bg {\r\n    background-color: @warning-color;\r\n  }\r\n}\r\n</style>\r\n"]}]}